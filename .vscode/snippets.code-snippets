{
    // Place your Hina workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.

    "Hina command template": {
        "scope": "typescript",
        "prefix": "HinaCommandTemplate",
        "body": [
            "import { Client, CommandInteraction, Message, SlashCommandBuilder } from 'discord.js';",
            "import BaseCommand from '../../res/models/BaseCommand.js';",
            "",
            "export default class extends BaseCommand {",
            "    constructor() {",
            "        super(new SlashCommandBuilder()",
            "            .setName('${1:command name}')",
            "            .setDescription('${2:command description}'));",
            "    }",
            "",
            "    async slashExecute(Hina: Client, interaction: CommandInteraction) {}",
            "}"
        ],
        "description": "Create a basic Hina Command class."
    }
}
